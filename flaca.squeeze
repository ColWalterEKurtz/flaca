#!/bin/bash

# ------------------------------------------------------------------------------
# settings                                                              settings
# ------------------------------------------------------------------------------
set -o errtrace  # any trap on ERR is inherited by shell functions,
                 #   command substitutions, and commands executed in a subshell
                 #   environment
set -o nounset   # treat unset variables and parameters other than the special
                 #   parameters "@" and "*" as an error when performing
                 #   parameter expansion
set -o pipefail  # the return value of a pipeline is the value of the last
                 #   (rightmost) command to exit with a non-zero status, or
                 #   zero if all commands in the pipeline exit successfully

# set language
export LANG="en_US.UTF-8"

# use dot as decimal separator
export LC_NUMERIC="en_US.UTF-8"

# ------------------------------------------------------------------------------
# commands                                                              commands
# ------------------------------------------------------------------------------

# run some initial checks
if ! flaca.common check ; then

  # signalize trouble
  exit 1

fi

# try to get the active flashcard
ACTIVE=$(flaca.common get_active_flashcard)

# check if there is an active flashcard
if [ -n "$ACTIVE" ] ; then

  # notify user
  flaca.common failmsg "move your active flashcard first: $ACTIVE"

  # signalize trouble
  exit 1

fi

# find all box directories
while read -r BOXNAME
do

  # show progress
  flaca.common infomsg "creating temporary numbers: $BOXNAME"

  # initialize file counter
  COUNTER=0

  # first run: add '@' counter to all pdf files
  while read -r FLASHCARD
  do

    # step counter
    (( COUNTER += 1 ))

    # remove leading counter
    FIXPART=$(flaca.common get_fix_part "$FLASHCARD")

    # set new path
    TARGETPATH=$(printf "%s/@%06d-%s" "$BOXNAME" "$COUNTER" "$FIXPART")

    # rename flashcard
    mv -f "$FLASHCARD" "$TARGETPATH" &>"/dev/null"

    # check operation
    if [ -f "$FLASHCARD" ] || [ ! -f "$TARGETPATH" ] ; then

      # notify user
      flaca.common failmsg "unable to rename file: \"$FLASHCARD\""

      # signalize trouble
      exit 1

    else

      # show progress
      flaca.common donemsg "$FLASHCARD --> $TARGETPATH"

    fi

  done < <(flaca.common get_pdf_files "$BOXNAME")

  # show progress
  flaca.common infomsg "updating flashcard numbers: $BOXNAME"

  # second run: remove leading '@' character from all pdf filenames
  while read -r FLASHCARD
  do

    # remove leading '@' character
    FIXPART=$(basename "$FLASHCARD" | sed -nre "s|^@||p")

    # check if no '@' character has been removed
    if [ -z "$FIXPART" ] ; then

      # skip this file
      continue

    fi

    # set new path
    TARGETPATH=$(printf "%s/%s" "$BOXNAME" "$FIXPART")

    # rename flashcard
    mv -f "$FLASHCARD" "$TARGETPATH" &>"/dev/null"

    # check operation
    if [ -f "$FLASHCARD" ] || [ ! -f "$TARGETPATH" ] ; then

      # notify user
      flaca.common failmsg "unable to rename file: \"$FLASHCARD\""

      # signalize trouble
      exit 1

    else

      # show progress
      flaca.common donemsg "$TARGETPATH <-- $FLASHCARD"

    fi

  done < <(flaca.common get_pdf_files "$BOXNAME")

done < <(flaca.common get_box_directories)

# signalize success
exit 0

